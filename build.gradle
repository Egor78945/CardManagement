plugins {
	id 'java'
	id 'org.springframework.boot' version "$springBootVersion"
	id 'io.spring.dependency-management' version "$springDependencyManagementVersion"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

ext {
	javaVersion = System.getenv("JAVA_VERSION") ?: 17
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(javaVersion)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-security:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-aop:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-validation:$springBootVersion"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$springDocOpenApiWebMVCUIVersion"
	implementation 'org.liquibase:liquibase-core'
	implementation "io.jsonwebtoken:jjwt-api:$jjwtVersion"
	implementation "io.jsonwebtoken:jjwt-impl:$jjwtVersion"
	implementation "io.jsonwebtoken:jjwt-jackson:$jjwtVersion"

	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
